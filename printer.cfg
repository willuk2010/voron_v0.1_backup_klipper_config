# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.1 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[include V0Display.cfg]
[include fluidd.cfg]
[include meshBed.cfg]
[include klicky-probe.cfg]
[include neopixel.cfg]
[include KAMP_Settings.cfg]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_39FFDA054D46393308782443-if00

[mcu rpi]
serial: /tmp/klipper_host_mcu

[exclude_object]

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    60, 60, 20  # an example

[printer]
kinematics: corexy
max_velocity: 400
max_accel: 6000 #(was 2000)
max_accel_to_decel: 4000 #(was not there)
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB12                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^PC0
position_endstop: 120
position_max: 122
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False
run_current: 0.7
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
driver_TBL: 2
driver_TOFF: 2
driver_HEND: 1
driver_HSTRT: 4
driver_PWM_LIM: 8 
driver_PWM_GRAD: 8
driver_PWM_FREQ: 1
driver_PWM_REG: 4

[stepper_y]
step_pin: PB10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB2                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^PC1
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: True
run_current: 0.7
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
driver_TBL: 2
driver_TOFF: 2
driver_HEND: 1
driver_HSTRT: 4
driver_PWM_LIM: 8 
driver_PWM_GRAD: 8
driver_PWM_FREQ: 1
driver_PWM_REG: 4

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PB0
dir_pin: !PC5                                                       # Remove the ! before PC5 if motor direction is inverted.
enable_pin: !PB1
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 16
#endstop_pin: ^PC2
#position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
position_max: 120
position_min: -2.5
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: True
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
#run_current: 0.2
#hold_current: 0.15
## For LDO-42STH25-1004CL200E 1.0A
run_current: 0.37
hold_current: 0.35
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: PB3
dir_pin: PB4                                                        # Add ! if moving opposite direction
enable_pin: !PD2
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
#rotation_distance: 22.33                                           # See calibrating rotation_distance on extruders doc
#gear_ratio: 50:10                                                   # For Mini Afterburner
rotation_distance: 5.7                              
#gear_ratio: 44:10, 37:17
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: Generic 3950                                # Adjust for your hotend thermistor. See 'sensor types' list at end of file
sensor_pin: PA0
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.025                                               # See tuning pressure advance doc

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC9
sensor_type: Generic 3950                           # For Keenovo, verify yours
sensor_pin: PC3
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

[verify_heater heater_bed] 
check_gain_time: 90

#####################################################################
#	Thermistor definitions
#####################################################################

[thermistor Trianglelab NTC100K B3950]
## values calibrated against a PT100 reference
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PA7 # PA7 is MOSI on the SPI header. Has an on board 10K pullup to 3v3. Connect other leg of thermistor to ground
pullup_resistor: 10000
gcode_id: C

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0	                                                    # You can't PWM the delta fan unless using blue wire

[fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[input_shaper]
shaper_freq_x: 59.6
shaper_type_x: mzv
shaper_freq_y: 78.0
shaper_type_y: mzv

[gcode_arcs]
resolution: 1.0

#####################################################################
#	Macros
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer and sets absolute positioning
  G28                   # Full home (XYZ)
  G90                   # Absolut position
  Attach_Probe_Lock

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    M106 S255                                         # Turns on the PT-fan
    G1 X{x_wait} Y{y_wait} Z20 F9000                  # Goes to center of the bed
    M190 S{target_bed}                                # Sets target temp for the bed
    M109 S170                                         # Heats the nozzle to 170 for bed mesh
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 5min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z20 F9000                # Goes to center of the bed
    M190 S{target_bed}                              # Sets target temp for the bed
    M109 S170                                       # Heats the nozzle to 170 for bed mesh
    G4 P300000                                      # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Bed Mesh
  BED_MESH_CALIBRATE
  Dock_Probe_Unlock
  
  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  M109 S{target_extruder}                           # Heats the nozzle to your print temp

  # Create a purge line and starts the print
  G1 X5 Y4 Z0.4 F10000                             # Moves to starting point
  G1 X115 E20 F1000                                # Purge line
    
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro POSITION]
gcode:
  GET_POSITION
  
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PURGE_LINE]
gcode:
    G0 Y0 X40                      ; go to tongue of print bed
    G1 Z0.2 F500.0                 ; move bed to nozzle
    G92 E0.0                       ; reset extruder
    G1 E2 F500                     ; pre-purge prime LENGTH SHOULD MATCH YOUR PRINT_END RETRACT
    G1 X80 E8.0 F500.0             ; intro line 1
    G1 Y0.3                        ; move in a little
    G1 X40 E8.0 F500.0             ; second line
    G92 E0.0                       ; reset extruder
    G1 Z2.0                        ; move nozzle to prevent scratch
   
[gcode_shell_command backup_cfg]
command: sh /home/pi/klipper_config/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg
 

[gcode_macro M600]
gcode:
  {% set Z = params.Z|default(10)|int %}
  {% set E = params.E|default(-20)|int %}
  {% set tool = params.tool|default(0)|int %}

        SAVE_GCODE_STATE NAME=M600_state
        PAUSE
        G1 E-5 F4000
        G1 Z{Z}
        G1 X60 Y110 F3000        ;park position
        G0 E10 F500               ;extrude filament to get better blob on end
        G0 E{E} F600              ;retract additional filament to move out of melt zone

[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    resume

##   Sensor Types
##   "Trianglelab NTC100K B3950" (Beta 3950 used in LDO kits)
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "PT1000"
##   For more information: https://www.klipper3d.org/Config_Reference.html#temperature_sensor

## Footnote about Beta 3950:
## https://github.com/Klipper3d/klipper/issues/4054
## https://github.com/Klipper3d/klipper/pull/4859

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.571
#*# pid_ki = 2.162
#*# pid_kd = 467.246
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.969
#*# pid_ki = 1.631
#*# pid_kd = 88.086
#*#
#*# [stepper_z]
#*# position_endstop = 0.013
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.032500, -0.025000, -0.042500, -0.065000, -0.097500
#*# 	-0.005000, 0.007500, 0.002500, -0.005000, -0.030000
#*# 	-0.007500, 0.000000, 0.000000, -0.005000, -0.025000
#*# 	-0.030000, -0.002500, -0.002500, -0.005000, -0.042500
#*# 	-0.072500, -0.052500, -0.037500, -0.040000, -0.062500
#*# tension = 0.2
#*# min_x = 15.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 15.0
#*# x_count = 5
#*# max_y = 105.0
#*# mesh_x_pps = 2
#*# max_x = 105.0
